<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="Logo_img.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>