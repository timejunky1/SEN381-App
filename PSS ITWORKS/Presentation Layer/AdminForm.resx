<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="Email_txt.GenerateMember" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>False</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="Logo_img.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        6dgTfcaQugAAAABJRU5ErkJggg==
</value>
  </data>
</root>